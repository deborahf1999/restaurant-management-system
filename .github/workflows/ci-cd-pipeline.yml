name: Build and Deploy

on:
  push:
    branches:
      - master
      - development
      - deploy-to-ec2
  pull_request:
    branches:
      - master
      - development
      - deploy-to-ec2

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Set up environment variables
        run: |
          echo "MONGO_DB_URI=${{ secrets.DB_URI }}" >> $GITHUB_ENV
          echo "ISSUER_URI=${{ secrets.ISSUER_URI }}" >> $GITHUB_ENV

      - name: Change to the project directory
        run: cd menu-management-service

      - name: Build with Maven
        run: mvn clean install
        working-directory: ./menu-management-service

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-artifacts
          path: menu-management-service/target/*.jar

      - name: view files
        run: ls
      - name: print working directory
        run: pwd
        working-directory: ./menu-management-service
      - name: Login to DockerHub
        run: docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}
      - name: Build docker image
        run: docker build -t deborahfernando99/restaurant-management-system/menu-management-service .
        working-directory: ./menu-management-service
      - name: Publish image to dockerhub
        run: docker push deborahfernando99/restaurant-management-system/menu-management-service:latest
        
  deploy:
    name: Deploy
    runs-on: aws-ec2
    needs: build
    if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pull image from dockerhub
        run: docker pull deborahfernando99/restaurant-management-system/menu-management-service:latest

      - name: Delete old container
        run: docker rm -f menu-management-container

      - name: Run docker container
        run: docker run -d -p 8050:8050 --name menu-management-container deborahfernando99/restaurant-management-system/menu-management-service:latest
