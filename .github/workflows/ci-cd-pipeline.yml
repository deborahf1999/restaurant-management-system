name: Build and Deploy

on:
  push:
    branches:
      - master
      - development
      - deploy-to-ec2
  pull_request:
    branches:
      - master
      - development
      - deploy-to-ec2

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  CONTAINER_NAME: ${{ vars.CONTAINER_NAME }}
permissions:
  contents: read

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven

      - name: Set up environment variables
        run: |
          echo "MONGO_DB_URI=${{ secrets.DB_URI }}" >> $GITHUB_ENV
          echo "ISSUER_URI=${{ secrets.ISSUER_URI }}" >> $GITHUB_ENV

      - name: Change to the project directory
        run: cd menu-management-service

      - name: Build with Maven
        run: mvn clean install
        working-directory: ./menu-management-service

      - name: Upload JAR to S3
        run: |
          aws s3 cp menu-management-service/target/*.jar s3://my-bucket-aws-2/menu-management-service-0.0.1-SNAPSHOT.jar
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ env.AWS_REGION }}
          MONGO_DB_URI: ${{ secrets.DB_URI }}
          DB_URI: ${{ secrets.DB_URI }}
          ISSUER_URI: ${{ secrets.ISSUER_URI }}

      - name: Upload built artifacts
        uses: actions/upload-artifact@v4
        with:
          name: built-artifacts
          path: menu-management-service/target/*.jar

      - name: view files
        run: ls

      - name: print working directory
        run: pwd
        working-directory: ./menu-management-service

      - name: Login to DockerHub
        run: docker login -u ${{secrets.DOCKERHUB_USERNAME}} -p ${{secrets.DOCKERHUB_TOKEN}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build docker image
        run: docker build -t deborahf1999/restaurant-management-system .
        working-directory: ./menu-management-service

      - name: Publish image to dockerhub
        run: docker push deborahf1999/restaurant-management-system:latest

      - name: Build
        uses: docker/build-push-action@v5
        with:
          context: ./menu-management-service
          platforms: linux/amd64,linux/arm64
          tags: deborahf1999/restaurant-management-system:latest
          secrets: |
            DB_URI=${{ secrets.DB_URI }}, \
            ISSUER_URI=${{ secrets.ISSUER_URI }}


  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/master' || github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Pull image from dockerhub
        run: docker pull deborahf1999/restaurant-management-system:latest

      - name: Delete old container
        run: docker rm -f menu-management-container

      - name: Run the container on EC2
        run: docker run -p 8050:8050 --name menu-management-container deborahf1999/restaurant-management-system:latest